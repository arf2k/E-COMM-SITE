{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport { persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./rootReducer.js\";\nimport { fetchCollectionStart } from \"./shop/shopSagas.js\";\nimport rootSaga from \"./rootSaga\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [logger, sagaMiddleware];\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport const storePersistor = {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/alexforeman/PracticeCoding/React/ecomm-proj/ecomm-site/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","createSagaMiddleware","rootReducer","fetchCollectionStart","rootSaga","sagaMiddleware","middlewares","store","run","persistor","storePersistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,oBAAP,MAAkC,YAAlC;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AAGA,MAAMK,WAAW,GAAG,CAACP,MAAD,EAASM,cAAT,CAApB;AAEA,OAAO,MAAME,KAAK,GAAGV,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGQ,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACG,GAAf,CAAmBJ,QAAnB;AAEA,OAAO,MAAMK,SAAS,GAAGT,YAAY,CAACO,KAAD,CAA9B;AAEP,OAAO,MAAMG,cAAc,GAAG;AAAEH,EAAAA,KAAF;AAASE,EAAAA;AAAT,CAAvB","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport { persistStore } from \"redux-persist\";\nimport createSagaMiddleware  from \"redux-saga\";\nimport rootReducer from \"./rootReducer.js\";\nimport { fetchCollectionStart } from \"./shop/shopSagas.js\";\nimport rootSaga from \"./rootSaga\"\n\nconst sagaMiddleware = createSagaMiddleware();\n\n\nconst middlewares = [logger, sagaMiddleware];\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\nexport const storePersistor = { store, persistor };\n\n\n\n"]},"metadata":{},"sourceType":"module"}