{"ast":null,"code":"import { takeEvery } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shopTypes.js\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/Firebase.utils\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"sup i'm fired\");\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/alexforeman/PracticeCoding/React/ecomm-proj/ecomm-site/src/redux/shop/shopSagas.js"],"names":["takeEvery","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsAsync","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","fetchCollectionStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,OAAQC,eAAR,MAA8B,gBAA9B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAGA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,eAAZ,CAAN;AACC,QAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AAEAD,EAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,UAAMC,cAAc,GAAGT,+BAA+B,CAACQ,QAAD,CAAtD;AACAE,IAAAA,QAAQ,CAACC,uBAAuB,CAACF,cAAD,CAAxB,CAAR;AACD,GALH,EAMGG,KANH,CAMSC,KAAK,IAAIH,QAAQ,CAACI,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAN1B;AAOJ;AAGD,OAAO,UAAUC,oBAAV,GAAgC;AAClC,QAAMnB,SAAS,CAACC,eAAe,CAACmB,sBAAjB,EAAyChB,qBAAzC,CAAf;AACJ","sourcesContent":["import { takeEvery } from \"redux-saga/effects\";\nimport  ShopActionTypes  from \"./shopTypes.js\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/Firebase.utils\";\n\n\nexport function* fetchCollectionsAsync() {\n    yield console.log(\"sup i'm fired\");\n     const collectionRef = firestore.collection('collections');\n \n     collectionRef\n       .get()\n       .then(snapshot => {\n         const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n         dispatch(fetchCollectionsSuccess(collectionsMap));\n       })\n       .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\n\n\nexport function* fetchCollectionStart(){\n     yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync)\n}"]},"metadata":{},"sourceType":"module"}