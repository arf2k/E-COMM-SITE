{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexforeman/PracticeCoding/React/ecomm-proj/ecomm-site/src/App.js\";\nimport \"./App.css\";\nimport React from \"react\";\nimport Homepage from \"./pages/homepage/Homepage.js\";\nimport \"./components/menu-item/MenuItem\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Shop from \"./pages/shop/Shop.js\";\nimport CheckoutPage from './pages/checkout/CheckoutPage.js';\nimport Header from \"./components/header/Header.js\";\nimport SignInSignUp from \"./pages/sign-in-sign-up/SignInSignUp.js\";\nimport { auth, createUserProfileDocument, addCollectionAndDocuments } from \"./firebase/Firebase.utils.js\";\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from \"./redux/user/userActions.js\";\nimport { selectCurrentUser } from \"./redux/user/userSelector.js\";\nimport { createStructuredSelector } from 'reselect';\nimport { selectCollectionsForPreview } from \"./redux/shop/shopSelectors.js\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribefromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser,\n      collectionsArray\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      } else {\n        setCurrentUser(userAuth);\n        addCollectionAndDocuments('collections', collectionsArray);\n      }\n    });\n  } // open subscription between app & firebase app- when changes occur on firebase related to this app firebase sends message saying user changed - they'll give us this user so we dont have to manually check if state has changed as long as app component is mounted - also have to close subscritpions when it unmounts so no memory leaks\n\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Homepage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/shop\",\n          component: Shop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/checkout\",\n          component: CheckoutPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signin\",\n          render: () => this.props.currentUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(SignInSignUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  collectionsArray: selectCollectionsForPreview\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/alexforeman/PracticeCoding/React/ecomm-proj/ecomm-site/src/App.js"],"names":["React","Homepage","Switch","Route","Redirect","Shop","CheckoutPage","Header","SignInSignUp","auth","createUserProfileDocument","addCollectionAndDocuments","connect","setCurrentUser","selectCurrentUser","createStructuredSelector","selectCollectionsForPreview","App","Component","unsubscribefromAuth","componentDidMount","collectionsArray","props","unsubscribeFromAuth","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport Homepage from \"./pages/homepage/Homepage.js\";\nimport \"./components/menu-item/MenuItem\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Shop from \"./pages/shop/Shop.js\";\nimport CheckoutPage from './pages/checkout/CheckoutPage.js'\nimport Header from \"./components/header/Header.js\";\nimport SignInSignUp from \"./pages/sign-in-sign-up/SignInSignUp.js\";\nimport { auth, createUserProfileDocument, addCollectionAndDocuments } from \"./firebase/Firebase.utils.js\";\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from \"./redux/user/userActions.js\"\nimport { selectCurrentUser } from \"./redux/user/userSelector.js\";\nimport {createStructuredSelector} from 'reselect'\n\nimport { selectCollectionsForPreview } from \"./redux/shop/shopSelectors.js\"\n\nclass App extends React.Component {\n\n\n  unsubscribefromAuth = null;\n\n  componentDidMount() {\n    const {setCurrentUser, collectionsArray} = this.props \n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        \n        userRef.onSnapshot((snapShot) => {\n         setCurrentUser({\n              id: snapShot.id,\n              ...snapShot.data(),\n          });\n        });\n      } else {\n        setCurrentUser(userAuth);\n        addCollectionAndDocuments('collections', collectionsArray)\n      }\n    });\n  }\n  // open subscription between app & firebase app- when changes occur on firebase related to this app firebase sends message saying user changed - they'll give us this user so we dont have to manually check if state has changed as long as app component is mounted - also have to close subscritpions when it unmounts so no memory leaks\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header/>\n        <Switch>\n          <Route exact path=\"/\" component={Homepage} />\n          <Route path=\"/shop\" component={Shop} />\n          <Route exact path=\"/checkout\" component={CheckoutPage}/>\n          <Route exact path=\"/signin\" render={() => this.props.currentUser? (\n            <Redirect to=\"/\" /> ) : (\n          <SignInSignUp/>)} />\n          <Homepage />\n        </Switch>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  collectionsArray: selectCollectionsForPreview\n})\n\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n"]},"metadata":{},"sourceType":"module"}