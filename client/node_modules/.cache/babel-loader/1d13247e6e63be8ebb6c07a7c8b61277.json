{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexforeman/PracticeCoding/React/ecomm-proj/ecomm-site/src/pages/shop/Shop.js\";\nimport React from \"react\";\nimport CollectionsOverview from \"../../components/collections-overview/CollectionsOverview.js\";\nimport { Route } from \"react-router-dom\";\nimport Collection from \"../collection/Collection.js\";\nimport { connect } from \"react-redux\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/Firebase.utils\";\nimport { updateCollections } from \"../../redux/shop/shopActions.js\";\nimport { WithSpinner } from \"../../components/with-spinner/WithSpinner\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionWithSpinner = WithSpinner(Collection);\n_c2 = CollectionWithSpinner;\n\nclass Shop extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: loading,\n          ...otherProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 71\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionWithSpinner\");","map":{"version":3,"sources":["/Users/alexforeman/PracticeCoding/React/ecomm-proj/ecomm-site/src/pages/shop/Shop.js"],"names":["React","CollectionsOverview","Route","Collection","connect","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionWithSpinner","Shop","Component","unsubscribeFromSnapshot","state","loading","componentDidMount","props","collectionRef","collection","get","then","snapshot","collectionsMap","setState","render","match","path","otherProps","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,8DAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,WAAT,QAA4B,2CAA5B;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACP,mBAAD,CAAlD;KAAMQ,8B;AACN,MAAMC,qBAAqB,GAAGF,WAAW,CAACL,UAAD,CAAzC;MAAMO,qB;;AAEN,MAAMC,IAAN,SAAmBX,KAAK,CAACY,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BC,uBAD+B,GACL,IADK;AAAA,SAGnCC,KAHmC,GAG3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAH2B;AAAA;;AAMjCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AACA,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACrC,YAAMC,cAAc,GAAGjB,+BAA+B,CAACgB,QAAD,CAAtD;AACAf,MAAAA,iBAAiB,CAACgB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJD;AAKD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKT,KAAvB;AACA,UAAM;AAAEF,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAEV,KAAK,iBAAK,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEF,OAA3C;AAAA,aAAwDa;AAAxD;AAAA;AAAA;AAAA;AAAA;AAAtD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEF,KAAK,CAACC,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAEV,KAAK,iBAAK,QAAC,qBAAD;AAAuB,UAAA,SAAS,EAAEF,OAAlC;AAAA,aAA+CE;AAA/C;AAAA;AAAA;AAAA;AAAA;AAA9D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA1BgC;;AA6BnC,MAAMY,kBAAkB,GAAIC,QAAD,KAAe;AACxCvB,EAAAA,iBAAiB,EAAGgB,cAAD,IACjBO,QAAQ,CAACvB,iBAAiB,CAACgB,cAAD,CAAlB;AAF8B,CAAf,CAA3B;;AAKA,eAAenB,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkClB,IAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport CollectionsOverview from \"../../components/collections-overview/CollectionsOverview.js\";\nimport { Route } from \"react-router-dom\";\nimport Collection from \"../collection/Collection.js\";\nimport { connect } from \"react-redux\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/Firebase.utils\";\nimport { updateCollections } from \"../../redux/shop/shopActions.js\";\nimport { WithSpinner } from \"../../components/with-spinner/WithSpinner\"\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionWithSpinner = WithSpinner(Collection);\n\nclass Shop extends React.Component {\n    unsubscribeFromSnapshot = null;\n\nstate = {\n    loading: true\n}\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n\n    collectionRef.get().then((snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({ loading: false});\n    });\n  }\n\n  render() {\n    const { match } = this.props;\n    const { loading } = this.state;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} render={props => (<CollectionsOverviewWithSpinner isLoading={loading} {...otherProps} /> )} />\n        <Route path={`${match.path}/:collectionId`} render={props => (<CollectionWithSpinner isLoading={loading} {...props}/> )} />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateCollections: (collectionsMap) =>\n    dispatch(updateCollections(collectionsMap)),\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);\n"]},"metadata":{},"sourceType":"module"}