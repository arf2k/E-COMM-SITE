{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alexforeman/PracticeCoding/React/ecomm-proj/ecomm-site/client/src/components/sign-up/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/FormInput.js\";\nimport CustomButton from \"../custom-button/CustomButton.js\";\nimport { signUpStart } from \"../../redux/user/userActions.js\";\nimport \"./sign-up.styles.scss\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  _s();\n\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = userCredentials;\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const changeHandler = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"I do not have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: changeHandler,\n        label: \"Display Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: changeHandler,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: changeHandler,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: changeHandler,\n        label: \"Confirm Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"d0Id3fZRq6mniACopntEMY0GB7Y=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/alexforeman/PracticeCoding/React/ecomm-proj/ecomm-site/client/src/components/sign-up/SignUp.js"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","submitHandler","e","preventDefault","alert","changeHandler","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/FormInput.js\";\nimport CustomButton from \"../custom-button/CustomButton.js\";\nimport { signUpStart } from \"../../redux/user/userActions.js\";\n\nimport \"./sign-up.styles.scss\";\n\nconst SignUp = ({ signUpStart }) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    const { displayName, email, password, confirmPassword } = userCredentials;\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n    signUpStart({ displayName, email, password });\n  };\n\n  const changeHandler = (e) => {\n    const { name, value } = e.target;\n    setUserCredentials({ ...userCredentials, [name]: value });\n  };\n\n  const { displayName, email, password, confirmPassword } = userCredentials;\n  return (\n    <div className=\"sign-up\">\n      <h2 className=\"title\">I do not have an account</h2>\n      <span>Sign up with your email and password</span>\n      <form className=\"sign-up-form\" onSubmit={submitHandler}>\n        <FormInput\n          type=\"text\"\n          name=\"displayName\"\n          value={displayName}\n          onChange={changeHandler}\n          label=\"Display Name\"\n          required\n        ></FormInput>\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={changeHandler}\n          label=\"Email\"\n          required\n        ></FormInput>\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={changeHandler}\n          label=\"Password\"\n          required\n        ></FormInput>\n        <FormInput\n          type=\"password\"\n          name=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={changeHandler}\n          label=\"Confirm Password\"\n          required\n        ></FormInput>\n\n        <CustomButton type=\"submit\">SIGN UP</CustomButton>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}