{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexforeman/PracticeCoding/React/ecomm-proj/ecomm-site/src/pages/shop/Shop.js\";\nimport React from \"react\";\nimport CollectionsOverview from \"../../components/collections-overview/CollectionsOverview.js\";\nimport { Route } from 'react-router-dom';\nimport Collection from \"../collection/Collection.js\";\nimport { connect } from \"react-redux\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/Firebase.utils\";\nimport { updateCollections } from \"../../redux/shop/shopActions.js\";\n\nclass Shop extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: Collection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap));\n};\n\nexport default Shop;","map":{"version":3,"sources":["/Users/alexforeman/PracticeCoding/React/ecomm-proj/ecomm-site/src/pages/shop/Shop.js"],"names":["React","CollectionsOverview","Route","Collection","connect","firestore","convertCollectionsSnapshotToMap","updateCollections","Shop","Component","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionsMap","render","match","props","path","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,8DAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,iBAAT,QAAkC,iCAAlC;;AAGA,MAAMC,IAAN,SAAmBR,KAAK,CAACS,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAEnCC,uBAFmC,GAET,IAFS;AAAA;;AAInCC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMC,cAAc,GAAIV,+BAA+B,CAACS,QAAD,CAAvD;AACD,KAFD;AAGH;;AAGGE,EAAAA,MAAM,GAAE;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACG,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,QAAA,SAAS,EAAEnB;AAA/C;AAAA;AAAA;AAAA;AAAA,cADH,eAEG,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEiB,KAAK,CAACE,IAAK,gBAA3B;AAA4C,QAAA,SAAS,EAAEjB;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAMK;;AArB0B;;AAwBnC,MAAMkB,kBAAkB,GAAGC,QAAQ,IAAI;AACnCf,EAAAA,iBAAiB,EAAES,cAAc,IAAIM,QAAQ,CAACf,iBAAiB,CAACS,cAAD,CAAlB,CAA1B;AACtB,CAFD;;AAIA,eAAeR,IAAf","sourcesContent":["import React from \"react\";\nimport CollectionsOverview from \"../../components/collections-overview/CollectionsOverview.js\";\nimport { Route } from 'react-router-dom';\nimport Collection from \"../collection/Collection.js\";\nimport { connect } from \"react-redux\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/Firebase.utils\"\nimport { updateCollections } from \"../../redux/shop/shopActions.js\";\n\n\nclass Shop extends React.Component {\n\nunsubscribeFromSnapshot = null;\n\ncomponentDidMount() {\n    const collectionRef = firestore.collection(\"collections\");\n\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap =  convertCollectionsSnapshotToMap(snapshot)\n    })\n}\n\n\n    render(){\n    const { match } = this.props\n    return(\n    <div className=\"shop-page\">\n       <Route exact path={`${match.path}`} component={CollectionsOverview}/>\n       <Route path={`${match.path}/:collectionId`} component={Collection} />\n    </div>\n  )\n        }\n}\n\nconst mapDispatchToProps = dispatch => {\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n}\n\nexport default Shop;\n"]},"metadata":{},"sourceType":"module"}