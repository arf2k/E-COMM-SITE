{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexforeman/PracticeCoding/React/ecomm-proj/ecomm-site/src/App.js\";\nimport \"./App.css\";\nimport React from \"react\";\nimport Homepage from \"./pages/homepage/Homepage.js\";\nimport \"./components/menu-item/MenuItem\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Shop from \"./pages/shop/Shop.js\";\nimport Header from \"./components/header/Header.js\";\nimport SignInSignUp from \"./pages/sign-in-sign-up/SignInSignUp.js\";\nimport { auth, createUserProfileDocument } from \"./firebase/Firebase.utils.js\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribefromAuth = null;\n    this.state = {\n      currentUser: null\n    };\n  }\n\n  componentDidMount() {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          this.setState({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          }, () => {\n            console.log(this.state);\n          });\n        });\n      } else {\n        this.setState({\n          currentUser: userAuth\n        });\n      }\n    });\n  } // open subscription between app & firebase app- when changes occur on firebase related to this app firebase sends message saying user changed - they'll give us this user so we dont have to manually check if state has changed as long as app component is mounted - also have to close subscritpions when it unmounts so no memory leaks\n\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        currentUser: this.state.currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Homepage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/shop\",\n          component: Shop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          component: SignInSignUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alexforeman/PracticeCoding/React/ecomm-proj/ecomm-site/src/App.js"],"names":["React","Homepage","Switch","Route","Shop","Header","SignInSignUp","auth","createUserProfileDocument","App","Component","constructor","unsubscribefromAuth","state","currentUser","componentDidMount","unsubscribeFromAuth","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","setState","id","data","console","log","componentWillUnmount","render"],"mappings":";;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAO,iCAAP;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,8BAAhD;;AAEA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AADY,SAQdC,mBARc,GAQQ,IARR;AAGZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAIDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,mBAAL,GAA2BT,IAAI,CAACU,kBAAL,CAAwB,MAAOC,QAAP,IAAoB;AACrE,UAAIA,QAAJ,EAAc;AACZ,cAAMC,OAAO,GAAG,MAAMX,yBAAyB,CAACU,QAAD,CAA/C;AACAC,QAAAA,OAAO,CAACC,UAAR,CAAoBC,QAAD,IAAc;AAC/B,eAAKC,QAAL,CAAc;AACZR,YAAAA,WAAW,EAAE;AACXS,cAAAA,EAAE,EAAEF,QAAQ,CAACE,EADF;AAEX,iBAAGF,QAAQ,CAACG,IAAT;AAFQ;AADD,WAAd,EAKG,MAAM;AACPC,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;AACD,WAPD;AAQD,SATD;AAUD,OAZD,MAYO;AACL,aAAKS,QAAL,CAAc;AAAER,UAAAA,WAAW,EAAEI;AAAf,SAAd;AACD;AACF,KAhB0B,CAA3B;AAiBD,GA7B+B,CA8BhC;;;AAEAS,EAAAA,oBAAoB,GAAG;AACrB,SAAKX,mBAAL;AACD;;AAEDY,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAE,KAAKf,KAAL,CAAWC;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAEb;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAEG;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,SAAS,EAAEE;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAhD+B;;AAmDlC,eAAeG,GAAf","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport Homepage from \"./pages/homepage/Homepage.js\";\nimport \"./components/menu-item/MenuItem\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Shop from \"./pages/shop/Shop.js\";\nimport Header from \"./components/header/Header.js\";\nimport SignInSignUp from \"./pages/sign-in-sign-up/SignInSignUp.js\";\nimport { auth, createUserProfileDocument } from \"./firebase/Firebase.utils.js\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      currentUser: null,\n    };\n  }\n\n  unsubscribefromAuth = null;\n\n  componentDidMount() {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot((snapShot) => {\n          this.setState({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data(),\n            }\n          }, () => {\n            console.log(this.state)\n          });\n        });\n      } else {\n        this.setState({ currentUser: userAuth });\n      }\n    });\n  }\n  // open subscription between app & firebase app- when changes occur on firebase related to this app firebase sends message saying user changed - they'll give us this user so we dont have to manually check if state has changed as long as app component is mounted - also have to close subscritpions when it unmounts so no memory leaks\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header currentUser={this.state.currentUser} />\n        <Switch>\n          <Route exact path=\"/\" component={Homepage} />\n          <Route path=\"/shop\" component={Shop} />\n          <Route path=\"/signin\" component={SignInSignUp} />\n          <Homepage />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}