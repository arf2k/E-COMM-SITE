{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexforeman/PracticeCoding/React/ecomm-proj/ecomm-site/src/App.js\";\nimport \"./App.css\";\nimport React from 'react';\nimport Homepage from \"./pages/homepage/Homepage.js\";\nimport \"./components/menu-item/MenuItem\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Shop from \"./pages/shop/Shop.js\";\nimport Header from \"./components/header/Header.js\";\nimport SignInSignUp from \"./pages/sign-in-sign-up/SignInSignUp.js\";\nimport { auth } from './firebase/Firebase.utils.js';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribefromAuth = null;\n    this.state = {\n      currentUser: null\n    };\n  }\n\n  componentDidMount() {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(user => {\n      this.setState({\n        currentUser: user\n      });\n      console.log(this.state.currentUser);\n    });\n  } // open subscription between app & firebase app- when changes occur on firebase related to this app firebase sends message saying user changed - they'll give us this user so we dont have to manually check if state has changed as long as app component is mounted - also have to close subscritpions when it unmounts so no memory leaks \n\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        currentUser: this.state.currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Homepage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/shop\",\n          component: Shop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          component: SignInSignUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alexforeman/PracticeCoding/React/ecomm-proj/ecomm-site/src/App.js"],"names":["React","Homepage","Switch","Route","Shop","Header","SignInSignUp","auth","App","Component","constructor","unsubscribefromAuth","state","currentUser","componentDidMount","unsubscribeFromAuth","onAuthStateChanged","user","setState","console","log","componentWillUnmount","render"],"mappings":";;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAO,iCAAP;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,SAASC,IAAT,QAAqB,8BAArB;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAE;AACX;AADW,SAQbC,mBARa,GAQS,IART;AAGX,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAIDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,mBAAL,GAA2BR,IAAI,CAACS,kBAAL,CAAwBC,IAAI,IAAI;AACzD,WAAKC,QAAL,CAAc;AAACL,QAAAA,WAAW,EAAEI;AAAd,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,WAAvB;AACD,KAH0B,CAA3B;AAID,GAhB+B,CAiBhC;;;AAEFQ,EAAAA,oBAAoB,GAAG;AACrB,SAAKN,mBAAL;AACD;;AAECO,EAAAA,MAAM,GAAE;AACR,wBACE;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAE,KAAKV,KAAL,CAAWC;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAEZ;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAEG;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,SAAS,EAAEE;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAnCiC;;AAuClC,eAAeE,GAAf","sourcesContent":["import \"./App.css\";\nimport React from 'react'\nimport Homepage from \"./pages/homepage/Homepage.js\";\nimport \"./components/menu-item/MenuItem\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Shop from \"./pages/shop/Shop.js\";\nimport Header from \"./components/header/Header.js\";\nimport SignInSignUp from \"./pages/sign-in-sign-up/SignInSignUp.js\"\nimport { auth } from './firebase/Firebase.utils.js'\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    \n    this.state = {\n      currentUser: null\n    }\n  }\n\n  unsubscribefromAuth = null\n\n  componentDidMount() {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(user => {\n      this.setState({currentUser: user})\n      console.log(this.state.currentUser)\n    })\n  }\n  // open subscription between app & firebase app- when changes occur on firebase related to this app firebase sends message saying user changed - they'll give us this user so we dont have to manually check if state has changed as long as app component is mounted - also have to close subscritpions when it unmounts so no memory leaks \n\ncomponentWillUnmount() {\n  this.unsubscribeFromAuth()\n}\n\n  render(){\n  return (\n    <div>\n      <Header currentUser={this.state.currentUser}/>\n      <Switch>\n        <Route exact path=\"/\" component={Homepage} />\n        <Route path=\"/shop\" component={Shop} />\n        <Route path='/signin' component={SignInSignUp}/>\n        <Homepage />\n      </Switch>\n    </div>\n  );\n}\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}