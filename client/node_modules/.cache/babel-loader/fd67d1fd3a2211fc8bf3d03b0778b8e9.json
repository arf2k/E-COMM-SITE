{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shopTypes.js\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/Firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shopActions\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"sup i'm fired\");\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/alexforeman/PracticeCoding/React/ecomm-proj/ecomm-site/src/redux/shop/shopSagas.js"],"names":["call","put","takeLatest","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,OAAQC,eAAR,MAA8B,gBAA9B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SACKC,uBADL,EAEKC,uBAFL,QAGO,eAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,eAAZ,CAAN;;AAEA,MAAI;AACJ,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAACK,+BAAD,EAAkCQ,QAAlC,CAAjC;AACA,UAAMZ,GAAG,CAACK,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACC,GALD,CAKE,OAAOC,KAAP,EAAc;AACf,UAAMf,GAAG,CAAEM,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAzB,CAAT;AACA;AAEJ;AAGD,OAAO,UAAUC,qBAAV,GAAiC;AACnC,QAAMhB,UAAU,CAACC,eAAe,CAACgB,sBAAjB,EAAyCX,qBAAzC,CAAhB;AACJ","sourcesContent":["import { call, put, takeLatest } from \"redux-saga/effects\";\nimport  ShopActionTypes  from \"./shopTypes.js\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/Firebase.utils\";\nimport {\n     fetchCollectionsSuccess,\n     fetchCollectionsFailure\n} from \"./shopActions\";\n\nexport function* fetchCollectionsAsync() {\n    yield console.log(\"sup i'm fired\");\n\n    try { \n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\n    yield put(fetchCollectionsSuccess(collectionsMap))\n    } catch (error) {\n     yield put (fetchCollectionsFailure(error.message))\n    }\n\n}\n\n\nexport function* fetchCollectionsStart(){\n     yield takeLatest(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync)\n}"]},"metadata":{},"sourceType":"module"}