{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyAWetiR6n_nIgaU-6X9mzuXRBIvFD9Jc5A\",\n  authDomain: \"ecomm-ba1b7.firebaseapp.com\",\n  projectId: \"ecomm-ba1b7\",\n  storageBucket: \"ecomm-ba1b7.appspot.com\",\n  messagingSenderId: \"520255608690\",\n  appId: \"1:520255608690:web:cad544a0ba9f58ea78afeb\",\n  measurementId: \"G-8CZ3WJ90V7\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n}; //    API request\n// only perform save to db if not null- check if getting back valid obj so if null there's no userauth\n\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/alexforeman/PracticeCoding/React/ecomm-proj/ecomm-site/src/firebase/Firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACVC,EAAAA,MAAM,EAAE,yCADE;AAEVC,EAAAA,UAAU,EAAE,6BAFF;AAGVC,EAAAA,SAAS,EAAE,aAHD;AAIVC,EAAAA,aAAa,EAAE,yBAJL;AAKVC,EAAAA,iBAAiB,EAAE,cALT;AAMVC,EAAAA,KAAK,EAAE,2CANG;AAOVC,EAAAA,aAAa,EAAE;AAPL,CAAf;AAUG,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAqC;AAC5E,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAqB;AAChB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACC,YAAMV,OAAO,CAACW,GAAR,CAAY;AACbJ,QAAAA,WADa;AAEbC,QAAAA,KAFa;AAGbC,QAAAA,SAHa;AAIb,WAAGV;AAJU,OAAZ,CAAN;AAOJ,KARD,CAQE,OAAOa,KAAP,EAAa;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACJ;AACL;;AACD,SAAOf,OAAP;AAEJ,CAzBS,C,CA0BV;AACA;;AAEA,OAAO,MAAMgB,yBAAyB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACrE,QAAMC,aAAa,GAAGlB,SAAS,CAACmB,UAAV,CAAqBH,aAArB,CAAtB;AACJ,CAFM;AAOJ7B,QAAQ,CAACiC,aAAT,CAAuBhC,MAAvB;AAEA,OAAO,MAAMiC,IAAI,GAAGlC,QAAQ,CAACkC,IAAT,EAAb;AACP,OAAO,MAAMrB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMsB,QAAQ,GAAG,IAAInC,QAAQ,CAACkC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAMP,eAAenC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n     apiKey: \"AIzaSyAWetiR6n_nIgaU-6X9mzuXRBIvFD9Jc5A\",\n     authDomain: \"ecomm-ba1b7.firebaseapp.com\",\n     projectId: \"ecomm-ba1b7\",\n     storageBucket: \"ecomm-ba1b7.appspot.com\",\n     messagingSenderId: \"520255608690\",\n     appId: \"1:520255608690:web:cad544a0ba9f58ea78afeb\",\n     measurementId: \"G-8CZ3WJ90V7\"\n   }\n\n   export const createUserProfileDocument = async (userAuth, additionalData ) => {\n     if(!userAuth) return;\n\n     const userRef = firestore.doc(`users/${userAuth.uid}`)\n\n     const snapShot = await userRef.get();\n    \n     if(!snapShot.exists) {\n          const { displayName, email } = userAuth;\n          const createdAt = new Date();\n\n          try {\n               await userRef.set({\n                    displayName,\n                    email,\n                    createdAt,\n                    ...additionalData\n               })\n\n          } catch (error){\n               console.log('error creating user', error.message)\n          }\n     }\n     return userRef;\n\n}\n//    API request\n// only perform save to db if not null- check if getting back valid obj so if null there's no userauth\n\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n     const collectionRef = firestore.collection(collectionKey)\n}\n\n\n\n\n   firebase.initializeApp(config)\n\n   export const auth = firebase.auth();\n   export const firestore = firebase.firestore();\n\n   const provider = new firebase.auth.GoogleAuthProvider();\n   provider.setCustomParameters({prompt: 'select_account'});\n   export const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n   \n  \n   \n   \n   export default firebase;\n"]},"metadata":{},"sourceType":"module"}